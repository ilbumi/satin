services:
  # Test MongoDB database - isolated instance
  mongodb-test:
    image: mongo:7-jammy
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: testuser
      MONGO_INITDB_ROOT_PASSWORD: testpass
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}-test
    ports:
      - "27018:27017"  # Different port to avoid conflicts
    volumes:
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - satin-test-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # Backend API service for testing
  backend-test:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
      target: production
    restart: on-failure
    environment:
      - MONGO_DSN=mongodb://testuser:testpass@mongodb-test:27017/${MONGO_DATABASE}-test?authSource=admin
      - CORS_ORIGINS=["http://localhost:3001"]
    ports:
      - "8001:8000"  # Different port to avoid conflicts
    depends_on:
      mongodb-test:
        condition: service_healthy
    networks:
      - satin-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Frontend web service for testing
  frontend-test:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      target: production
      args:
        VITE_BACKEND_URL: http://localhost:8001
    restart: on-failure
    environment:
      - BASE_URL=http://localhost:3001
    ports:
      - "3001:3000"  # Different port to avoid conflicts
    depends_on:
      backend-test:
        condition: service_healthy
    networks:
      - satin-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

networks:
  satin-test-network:
    driver: bridge

# No persistent volumes for e2e tests - fresh data each time
