services:
  # MongoDB database
  mongodb:
    image: mongo:7-jammy
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - satin-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API service
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
      target: production
    restart: unless-stopped
    environment:
      - MONGO_DSN=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      - CORS_ORIGINS=${CORS_ORIGINS}
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - satin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend web service
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      target: production
    restart: unless-stopped
    environment:
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - satin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  satin-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
